<?php
/**
 * @file
 * localgov_base_moderation.module
 * Code for the LocalGov Base: Moderation module.
 *
 * @package   localgov_base_moderation
 * @author    Craig Gardener <craig.gardener@bracknell-forest.gov.uk>
 * @copyright Copyright (c) 2016, Craig Gardener
 * @license   http://opensource.org/licenses/gpl-license.php
 *            GNU General Public License, version 2 or later
 */

/**
 * Include all files in 'includes/'.
 */
foreach (glob(__DIR__ . '/includes/*.inc') as $filename) {
  include_once $filename;
}

/**
 * Include features code.
 */
include_once 'localgov_base_moderation.features.inc';

/**
 * Implements hook_node_type_insert().
 */
function localgov_base_moderation_node_type_insert($info) {
  // Add moderation field to newly created content type.
  _localgov_base_moderation_add_field('node', $info->type);
}

/**
 * Implements hook_post_features_enable_feature().
 */
function localgov_base_moderation_post_features_enable_feature() {
  features_rebuild();

  // Delete unwanted workbench transition
  $transition = new stdClass();
  $transition->from_name = 'needs_review';
  $transition->to_name = 'draft';
  workbench_moderation_transition_delete($transition);

  // Add moderation field to all node types.
  $types = node_type_get_names();
  foreach ($types as $type) {
    _localgov_base_moderation_add_field('node', $type);
  }
}

/**
 * Implements hook_form_node_form_alter().
 */
function localgov_base_moderation_form_node_form_alter(&$form, $form_state) {
  // This must be a node form and a node that has moderation enabled.
  // Extended to include moderation check on the individual node.
  if (!workbench_moderation_node_moderated($form['#node'])) {
    return;
  }

  // Implement afterbuild.
  $form['#after_build'][] = '_localgov_base_moderation_form_organize';

  // Implement validate to avoid errors & notices.
  $form['#validate'][] = '_localgov_base_moderation_form_validate';
}

/**
 * Implements hook_views_api().
 */
function localgov_base_moderation_views_api($module, $api) {
  if ($module == 'views' && $api == 'views_default') {
    return array(
      'version' => 2
    );
  }
}

/**
 * Implements hook_module_implements_alter().
 */
function localgov_base_moderation_module_implements_alter(&$implementations, $hook) {
  // Put the form alter for this module last, so it runs after
  // workbench_moderation, et al.
  if ($hook === 'form_alter' && isset($implementations['localgov_base_moderation'])) {
    $group = $implementations['localgov_base_moderation'];
    unset($implementations['localgov_base_moderation']);
    $implementations['localgov_base_moderation'] = $group;
  }
}
