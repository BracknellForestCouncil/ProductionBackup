<?php
/**
 * @file
 * localgov_feature_guide.module
 * Code for the LocalGov Feature: Guide module.
 *
 * @package   localgov_feature_guide
 * @author    Craig Gardener <craig.gardener@bracknell-forest.gov.uk>
 * @copyright Copyright (c) 2016, Craig Gardener
 * @license   http://opensource.org/licenses/gpl-license.php
 *            GNU General Public License, version 2 or later
 */

/**
 * Include all files in 'includes/'.
 */
foreach (glob(__DIR__ . '/includes/*.inc') as $filename) {
  include_once $filename;
}

/**
 * Include features code.
 */
include_once 'localgov_feature_guide.features.inc';

/**
 * Implements hook_theme().
 */
function localgov_feature_guide_theme($existing, $type, $theme, $path) {
  return array(
    'node__guide' => array(
      'render element' => 'content',
      'base hook' => 'node',
      'template' => 'node--guide',
      'path' => drupal_get_path('module', 'localgov_feature_guide') . '/templates',
    ),
    'node__guide_section' => array(
      'render element' => 'content',
      'base hook' => 'node',
      'template' => 'node--guide_section',
      'path' => drupal_get_path('module', 'localgov_feature_guide') . '/templates',
    ),
  );
}


/**
 * Implements preprocess_html().
 */
function localgov_feature_guide_process_html(&$variables) {
  // Use the guide title (rather than guide section) for the page title.
  $arg0 = arg(0);
  $arg1 = arg(1);
  if ($arg0 == 'node' && isset($arg1) && $arg1 > 0) {
    $node = node_load($arg1);
    if ($node->type == "guide_section") {
      $parent = menu_link_load($node->guide['plid']);
      $variables['head_title_array']['title'] = $parent['link_title'];
      $variables['head_title'] = implode(' | ', $variables['head_title_array']);
    }
  }
}

/**
 * Implements preprocess_page().
 */
function localgov_feature_guide_preprocess_page(&$variables) {
  // Use the guide title (rather than guide section) for the page title.
  if (isset($variables['node']) && $variables['node']->type == "guide_section") {
    $parent = menu_link_load($variables['node']->guide['plid']);
    $variables['title'] = $parent['link_title'];
  }

  // Create the previous and next section links.
  if (isset($variables['node']) && $variables['node']->type == "guide") {
    $guide_link = menu_link_load($variables['node']->guide['mlid']);
    if ($guide_link['mlid']) {
      if ($next = guide_next($guide_link)) {
        $next_href = url($next['href']);
        drupal_add_html_head_link(array('rel' => 'next', 'href' => $next_href));
        $variables['node']->guide['next_url'] = $next_href;
        $variables['node']->guide['next_title'] = check_plain($next['title']);
      }
    }
  }

  // Get the object and do some other checks based on what you need.
  if (isset($variables['node']) && ($variables['node']->type == "guide" || $variables['node']->type == "guide_section")) {
    $variables['guide_menu'] = '';
    // Generate a render array for the node.
    $view = node_view($variables['node']);
    // "Create" a new variable for the page.tpl.php.
    $variables['guide_menu'] = drupal_render($view['guide_navigation_primary']);
  }
}
