<?php
/**
 * @file
 * localgov_base_paragraphs.module
 * Code for the LocalGov Base: Paragraphs module.
 *
 * @package   localgov_base_paragraphs
 * @author    Craig Gardener <craig.gardener@bracknell-forest.gov.uk>
 * @copyright Copyright (c) 2016, Craig Gardener
 * @license   http://opensource.org/licenses/gpl-license.php
 *            GNU General Public License, version 2 or later
 */

/**
 * Include all files in 'includes/'.
 */
foreach (glob(__DIR__ . '/includes/*.inc') as $filename) {
  include_once $filename;
}

/**
 * Include features code.
 */
include_once 'localgov_base_paragraphs.features.inc';

/**
 * Implements hook_theme_registry_alter().
 */
function localgov_base_paragraphs_theme_registry_alter(&$theme_registry) {
  // Defined path to the current module.
  $module_path = drupal_get_path('module', 'localgov_base_paragraphs');
  // Find all .tpl.php files in this module's folder recursively.
  $template_file_objects = drupal_find_theme_templates($theme_registry, '.tpl.php', $module_path);
  // Iterate through all found template file objects.
  foreach ($template_file_objects as $key => $template_file_object) {
    // If the template has not already been overridden by a theme.
    if (!isset($theme_registry[$key]['theme path']) || !preg_match('#/themes/#', $theme_registry[$key]['theme path'])) {
      // Alter the theme path and template elements.
      $theme_registry[$key]['theme path'] = $module_path;
      $theme_registry[$key] = array_merge($theme_registry[$key], $template_file_object);
      $theme_registry[$key]['type'] = 'module';
    }
  }
}


/**
 * Implements hook_libraries_info().
 */
function localgov_base_paragraphs_libraries_info() {
  $libraries = array();
  $libraries['jquery_accessible_tabs'] = array(
    'name' => 'jQuery Accessible Tabs',
    'vendor url' => 'https://github.com/nomensa/jquery.accessible-tabs',
    'download url' => 'https://github.com/nomensa/jquery.accessible-tabs/achive/master.zip',
    'version callback' => 'localgov_base_paragraphs_version',
    'files' => array(
      'js' => array(
        'jquery.accTabs.js',
      ),
    ),
  );

  $libraries['jquery_accessible_accordion'] = array(
    'name' => 'jQuery Accessible Accordion',
    'vendor url' => 'https://github.com/nomensa/jquery.accessible-accordion',
    'download url' => 'https://github.com/nomensa/jquery.accessible-accordionachive/master.zip',
    'version callback' => 'localgov_base_paragraphs_version',
    'files' => array(
      'js' => array(
        'jquery.accAccordion.js',
      ),
    ),
  );

  return $libraries;
}

/**
 * Implements hook_preprocess_entity().
 */
function localgov_base_paragraphs_preprocess_entity(&$variables) {
	drupal_add_js(drupal_get_path('module', 'localgov_base_paragraphs') . '/js/localgov_base_paragraphs.js');

  if ($variables['elements']['#bundle'] == 'tabs' && $variables['elements']['#entity_type'] == 'paragraphs_item') {
    libraries_load('jquery_accessible_tabs');
  }

  if ($variables['elements']['#bundle'] == 'accordion' && $variables['elements']['#entity_type'] == 'paragraphs_item') {
    libraries_load('jquery_accessible_accordion');
  }
}

/**
 * Short-circuit the version argument.
 */
function localgov_base_paragraphs_version() {
  return TRUE;
}