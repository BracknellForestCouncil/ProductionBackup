<?php

/**
 * @file
 * Code for the Bracknell Base feature.
 */

include_once 'bracknell_base.features.inc';
include_once 'bracknell_base.page.inc';

/**
 * Implements hook_theme().
 */
function bracknell_base_theme($existing, $type, $theme, $path) {
  $theme = array();
  $theme['field__field_related_pages'] = array(
    'render element' => 'content',
    'base hook' => 'field',
    'template' => 'field--field-related-pages',
    'path' => drupal_get_path('module', 'bracknell_base') . '/templates',
  );
  $theme['field__field_related_links'] = array(
    'render element' => 'content',
    'base hook' => 'field',
    'template' => 'field--field-related-links',
    'path' => drupal_get_path('module', 'bracknell_base') . '/templates',
  );
  $theme['field__field_related_pages_view'] = array(
    'render element' => 'content',
    'base hook' => 'field',
    'template' => 'field--field-related-pages-view',
    'path' => drupal_get_path('module', 'bracknell_base') . '/templates',
  );
  $theme['field__field_related_links_view'] = array(
    'render element' => 'content',
    'base hook' => 'field',
    'template' => 'field--field-related-links-view',
    'path' => drupal_get_path('module', 'bracknell_base') . '/templates',
  );
  $theme['field__field_promotional_hero'] = array(
    'render element' => 'content',
    'base hook' => 'field',
    'template' => 'field--field-promotional-hero',
    'path' => drupal_get_path('module', 'bracknell_base') . '/templates',
  );
  return $theme;
}

/**
 * Implements hook_preprocess_page().
 */
function bracknell_base_preprocess_page(&$variables) {
  // Make the fields "field_promotional_hero" and "field_promotional_slogan"
  // available as variable to use in page.tpl.php.
  $variables['hero'] = '';
  $variables['slogan'] = '';
  // Get the object and do some other checks based on what you need.
  if (($node = menu_get_object()) && $node->type) {
    // Generate a render array for the node.
    $view = node_view($node);
    // "Create" new variables for the page.tpl.php.
    $variables['hero'] = drupal_render($view['field_promotional_hero']);
    $variables['slogan'] = drupal_render($view['field_promotional_slogan']);

    // If the hero has an image, output a class to style the hero differently
    // from the title alone.
    if (!empty($variables['node']->field_promotional_hero) >= 1) {
      $variables['classes_array'][] = 'promotional-hero-has-image';
    }
  }
}

/**
 * Implements hook_menu().
 */
function bracknell_base_menu() {
  $items['bb-403'] = array(
    'title' => 'Access Denied',
    'description' => 'This returns the 403 - Access Denied error page',
    'page callback' => 'bracknell_base_error_page',
    'page arguments' => array('403'),
    'file' => 'bracknell_base.page.inc',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

  $items['bb-404'] = array(
    'title' => 'Page Not Found',
    'description' => 'This returns the 404 - Page Not Found error page',
    'page callback' => 'bracknell_base_error_page',
    'page arguments' => array('404'),
    'file' => 'bracknell_base.page.inc',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implements hook_addressfield_address_formats_alter().
 */
function bracknell_base_addressfield_address_formats_alter(&$address_formats) {
  // Enable 'sub_premise' field.
  $address_formats['GB']['used_fields'][] = 'sub_premise';
  // Set label.
  $address_formats['GB']['sub_premise_label'] = t('Address 3');
}

/**
 * Implements hook_preprocess_HOOK().
 *
 * This processes the media browser theme for documents and removes the
 * media label by setting '#show_names' to false.
 *
 * @see theme_media_thumbnail
 */
function bracknell_base_preprocess_media_thumbnail(&$variables) {
  $theme = $variables['element']['#theme'];
  if (current_path() === 'media/browser' && !empty($theme) && $theme === 'file_formatter_table') {
    $variables['element']['#show_names'] = FALSE;
  }
}

/**
 * Implements hook_entity_info_alter().
 */
function bracknell_base_entity_info_alter(&$entity_info) {
  // Use a custom label returner.
  $entity_info['node']['label callback'] = '_bracknell_base_set_display_title';
}

/**
 * Custom label function that returns display title if set, falls back to 
 * standard node title.
 * 
 * @see callback_entity_info_label
 */
function _bracknell_base_set_display_title($entity, $entity_type) {
  if (isset($entity->field_node_display_title[LANGUAGE_NONE]) && !empty($entity->field_node_display_title[LANGUAGE_NONE][0]['safe_value'])) {
    return $entity->field_node_display_title[LANGUAGE_NONE][0]['value'];
  }
  else {
    return empty($entity->title) ? 'Untitled entity' : $entity->title;
  }
}
