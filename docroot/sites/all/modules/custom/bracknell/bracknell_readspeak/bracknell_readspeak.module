<?php

/**
 * @file
 * Contains the hooks and functions to implement Readspeaker.
 */

/**
 * Implements hook_form_alter().
 */
function bracknell_readspeak_form_alter(&$form, &$form_state, $form_id) {
  // If path is a node, load the node id and get the readspeak variable.
  if (arg(0) == 'node' && is_numeric(arg(1))) {
    $nid = arg(1);
    if (!empty($nid)) {
      $node = node_load($nid);
      if (!empty($node->base_readspeak) && $node->base_readspeak == '1') {
        // Attach the Readspeak javascript to the page as it's required.
        $form['#attached']['js'] = array(
          '//f1-eu.readspeaker.com/script/5766/ReadSpeaker.js?pids=embhl' => array(
            'type' => 'external',
          ),
        );
      }
    }
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function bracknell_readspeak_preprocess_page(&$variables) {
  if (path_is_admin(current_path())) {
    return;
  }

  $enable_rs = '0';
  if (isset($variables['node'])) {
    $enable_rs = $variables['node']->base_readspeak;
  }

  if ($enable_rs == '1') {

    // Define a new title variable - text only.
    if (!empty($node = $variables['node'])) {
      $variables['rs_title'] = $node->title;
    }

    // Define a path for the Readspeak JS
    $variables['rs_path'] = $GLOBALS['base_url'] . request_uri();

    $variables['readspeaker_button'] = theme('bracknell_readspeak_template', array('rs_path' => $variables['rs_path']));
  }
}

/**
 * Implements hook_theme().
 */
function bracknell_readspeak_theme($existing, $type, $theme, $path) {
  return array(
    'bracknell_readspeak_template' => array(
      'variables' => array(
        'rs_path' => NULL,
      ),
      'path' => drupal_get_path('module', 'bracknell_readspeak') . '/templates',
      'template' => 'bracknell_readspeak_button',
    ),
  );
}


/**
 * Implements hook_theme_registry_alter().
 */
function bracknell_readspeak_theme_registry_alter(&$theme_registry) {
  // Defined path to the current module.
  $module_path = drupal_get_path('module', 'bracknell_readspeak');
  // Find all .tpl.php files in this module's folder recursively.
  $template_file_objects = drupal_find_theme_templates($theme_registry, '.tpl.php', $module_path);
  // Iterate through all found template file objects.
  foreach ($template_file_objects as $key => $template_file_object) {
    // If the template has not already been overridden by a theme.
    if (!isset($theme_registry[$key]['theme path']) || !preg_match('#/themes/#', $theme_registry[$key]['theme path'])) {
      // Alter the theme path and template elements.
      $theme_registry[$key]['theme path'] = $module_path;
      $theme_registry[$key] = array_merge($theme_registry[$key], $template_file_object);
      $theme_registry[$key]['type'] = 'module';
    }
  }
}
