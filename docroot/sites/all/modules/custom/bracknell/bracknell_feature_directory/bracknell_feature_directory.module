<?php

/**
 * @file
 * Code for the Bracknell Directory feature.
 */
include_once 'bracknell_feature_directory.features.inc';

/**
 * Implements hook_form_FORM_ID_alter().
 */
function bracknell_feature_directory_form_eck__entity__form_add_directory_entry_directory_entry_alter(&$form, $form_state) {
  // Ensure that the title field is at the top of the form.
  $form['title']['#weight'] = -1;
}

/**
 * Implements hook_preprocess_HOOK() for nodes.
 */
function bracknell_feature_directory_preprocess_node(&$variables) {
  // This code is a copy of content type group theme module.
  $node = &$variables['node'];

  // Get the content type groups and apply the theme suggestion.
  $content_type_group = db_select('content_type_groups_types', 'g')
      ->fields('g', array('group_type'))
      ->condition('content_type', $node->type)
      ->execute()
      ->fetchField();

  if ($content_type_group) {
    // Add specific theme hook suggestions for the content type group.
    array_unshift($variables['theme_hook_suggestions'], 'node__content_type_groups__' . $content_type_group . '__' . $variables['view_mode']);
    array_unshift($variables['theme_hook_suggestions'], 'node__content_type_groups__' . $content_type_group);
  }

  //Add an overview map to location_ content types.
  if ($content_type_group == 'location') {
    $location_id = $variables['field_directory_entry'][0]['target_id'];
    if (!empty($location_id)) {
      $location_entity = entity_load('directory_entry', array($location_id));
      $overview_map = entity_view('directory_entry', $location_entity, 'location_overview_map');
      $variables['map_overview'] = !empty($overview_map) ? $overview_map : '<p>' . t('An overview map is currently unavailable.') . '</p>';
    }
  }
}

/**
 * Implements hook_theme_registry_alter().
 */
function bracknell_feature_directory_theme_registry_alter(&$theme_registry) {
  // Defined path to the current module.
  $module_path = drupal_get_path('module', 'bracknell_feature_directory');
  // Find all .tpl.php files in this module's folder recursively.
  $template_file_objects = drupal_find_theme_templates($theme_registry, '.tpl.php', $module_path);
  // Iterate through all found template file objects.
  foreach ($template_file_objects as $key => $template_file_object) {
    // If the template has not already been overridden by a theme.
    if (!isset($theme_registry[$key]['theme path']) || !preg_match('#/themes/#', $theme_registry[$key]['theme path'])) {
      // Alter the theme path and template elements.
      $theme_registry[$key]['theme path'] = $module_path;
      $theme_registry[$key] = array_merge($theme_registry[$key], $template_file_object);
      $theme_registry[$key]['type'] = 'module';
    }
  }
}
